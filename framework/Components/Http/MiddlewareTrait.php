<?php
/**
 * Spiral Framework.
 *
 * @license   MIT
 * @author    Anton Titov (Wolfy-J)
 * @copyright Â©2009-2015
 */
namespace Spiral\Components\Http;

trait MiddlewareTrait
{
    /**
     * Handle request generate response. Middleware used to alter incoming Request and/or Response
     * generated by inner pipeline layers.
     *
     * @param Request     $request Server request instance.
     * @param \Closure    $next    Next middleware/target.
     * @param object|null $context Pipeline context, can be HttpDispatcher, Route or module.
     * @return Response
     */
    abstract public function handle(Request $request, \Closure $next = null, $context = null);

    /**
     * Handle request generate response. Middleware used to alter incoming Request and/or Response
     * generated by inner pipeline layers.
     *
     * @param Request     $request Server request instance.
     * @param \Closure    $next    Next middleware/target.
     * @param object|null $context Pipeline context, can be HttpDispatcher, Route or module.
     * @return Response
     */
    public function __invoke(Request $request, \Closure $next = null, $context = null)
    {
        //I simple alias for people who love nice looking code
        return $this->handle($request, $next, $context);
    }
}