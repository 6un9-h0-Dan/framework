<?php
/**
 * Spiral Framework.
 *
 * @license   MIT
 * @author    Anton Titov (Wolfy-J)
 * @copyright Â©2009-2015
 */
namespace Spiral\Components\Http;

use Spiral\Components\Http\Cookies\Cookie;
use Spiral\Core\Component;

class CsrfChecker implements MiddlewareInterface
{
    /**
     * Token have to check in cookies and queries.
     */
    const TOKEN_NAME = 'csrf-token';

    /**
     * Header to check for token instead of POST/GET data.
     */
    const CRSF_HEADER = 'X-CSRF-Token';

    /**
     * Handle request generate response. Middleware used to alter incoming Request and/or Response
     * generated by inner pipeline layers.
     *
     * @param Request     $request Server request instance.
     * @param \Closure    $next    Next middleware/target.
     * @param object|null $context Pipeline context, can be HttpDispatcher, Route or module.
     * @return Response
     */
    public function __invoke(Request $request, \Closure $next = null, $context = null)
    {
        if (in_array($request->getMethod(), array('GET', 'HEAD', 'OPTIONS')))
        {
            //unfinished
        }

        /**
         * @var Response $response
         */
        $response = $next($request->withAttribute('crsfToken', $token = bin2hex(openssl_random_pseudo_bytes(16))));

        return $response->withCookie(new Cookie(self::TOKEN_NAME, $token, 86400));
    }
}