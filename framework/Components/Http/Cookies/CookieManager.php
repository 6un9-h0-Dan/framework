<?php
/**
 * Spiral Framework.
 *
 * @license   MIT
 * @author    Anton Titov (Wolfy-J)
 * @copyright ©2009-2015
 */
namespace Spiral\Components\Http\Cookies;

use Spiral\Components\Http\MiddlewareInterface;
use Spiral\Components\Http\Request;
use Spiral\Components\Http\Response;
use Spiral\Core\Component;

class CookieManager extends Component implements MiddlewareInterface
{
    /**
     * Handle request generate response. Middleware used to alter incoming Request and/or Response
     * generated by inner pipeline layers.
     *
     * @param Request     $request Server request instance.
     * @param \Closure    $next    Next middleware/target.
     * @param object|null $context Pipeline context, can be HttpDispatcher, Route or module.
     * @return Response
     */
    public function __invoke(Request $request, \Closure $next = null, $context = null)
    {
        //Read all cookies and decode them (except excluded ones - token + session)
        //$e = Encrypter::getInstance();

        return $next();
        //Encrypt every new cookie
    }
}